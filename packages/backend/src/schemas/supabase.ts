/*
 * ==========================================
 * |          GENERATED BY SUPAZOD          |
 * ==========================================
 */
import type { Json } from './../types/supabase.d'

import { z } from 'zod'

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(z.union([jsonSchema, z.undefined()])),
      z.array(jsonSchema),
    ])
    .nullable()
)

export const publicRoomsRowSchemaSchema = z.object({
  created_at: z.string(),
  id: z.string(),
  is_open: z.boolean(),
  updated_at: z.string(),
  user_id: z.string(),
})

export const publicRoomsInsertSchemaSchema = z.object({
  created_at: z.string().optional(),
  id: z.string().optional(),
  is_open: z.boolean().optional(),
  updated_at: z.string().optional(),
  user_id: z.string().optional(),
})

export const publicRoomsUpdateSchemaSchema = z.object({
  created_at: z.string().optional(),
  id: z.string().optional(),
  is_open: z.boolean().optional(),
  updated_at: z.string().optional(),
  user_id: z.string().optional(),
})

export const publicRoomsRelationshipsSchemaSchema = z.tuple([])
